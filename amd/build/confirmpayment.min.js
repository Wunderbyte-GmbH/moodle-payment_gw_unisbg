define(['exports', 'core/ajax', 'core/modal_factory', 'core/modal_events'], (function (exports, Ajax, ModalFactory, ModalEvents) { 'use strict';

    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

    var Ajax__default = /*#__PURE__*/_interopDefaultLegacy(Ajax);
    var ModalFactory__default = /*#__PURE__*/_interopDefaultLegacy(ModalFactory);
    var ModalEvents__default = /*#__PURE__*/_interopDefaultLegacy(ModalEvents);

    // This file is part of Moodle - http://moodle.org/

    const init = (itemid, customer, component, paymentarea, ischeckstatus, tid) => {

        Ajax__default["default"].call([{
            methodname: "paygw_unisbg_create_transaction_complete",
            args: {
                component,
                paymentarea,
                itemid,
                tid,
                token: '',
                customer,
                ischeckstatus
            },
            done: function(data) {
                if (data.success !== true) {
                    require(['jquery'], function($) {
                        require(['core/str'], function(str) {
                            var strings = [
                                {
                                    key: 'error',
                                    component: 'paygw_unisbg'
                                },
                                {
                                    key: 'proceed',
                                    component: 'paygw_unisbg',
                                }
                            ];
                            var localStrings = str.get_strings(strings);
                            $.when(localStrings).done(function(localizedEditStrings) {
                                ModalFactory__default["default"].create({
                                    type: ModalFactory__default["default"].types.CANCEL,
                                    title: localizedEditStrings[0],
                                    body: data.message,
                                    buttons: {
                                        cancel: localizedEditStrings[1],
                                    },
                                })
                                .then(function(modal) {
                                    var root = modal.getRoot();
                                    root.on(ModalEvents__default["default"].cancel, function() {
                                        location.href = data.url;
                                    });
                                    modal.show();
                                    return true;
                                }).catch({
                                    // Debugging console.log(e);
                                });
                            });
                        });
                    });
                } else {
                    location.href = data.url;
                }
            },
            fail: function(ex) {
                // eslint-disable-next-line no-console
                console.log("exxx:" + ex);
            },
        }]);

    };

    exports.init = init;

    Object.defineProperty(exports, '__esModule', { value: true });

}));

//# sourceMappingURL=confirmpayment.min.js.map